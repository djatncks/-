컴퓨터 네트워크 131-136 요약

HTTP Methods
1.	POST
The POST method sends data to a server to create or update a resource. The data sent to the server is included in the body of the request.
usage: Submitting forms, such as user registration or login.
2.	GET
The GET method requests data from a specified resource. It is used to retrieve data without causing any side effects on the server.
usage: Fetching web pages or resources, such as images and documents.
3.	PUT
The PUT method updates a resource or creates a new resource if it doesn't already exist. It replaces the current representation of the resource with the uploaded data.
usage: Updating existing data, such as modifying user profile information.
4.	DELETE 
 The DELETE method requests the server to delete a specified resource. It is idempotent, meaning multiple identical requests will not further affect the resource state.
usage: Removing resources like user accounts, comments, or files from the server.


HTTP Codes
	
1.	1xx(informational)
These codes indicate that a request has been received and is being processed.
usage: 100 Continue: Indicates that the initial part of the request has been received and the client can continue 
with the rest of the request.
2.	2xx(success)
These codes indicate that the client's request was successfully received, understood, and accepted.
usage: 200 OK: Request succeeded and the information is returned in the response.
3.	3xx(redirection)
These codes indicate that further action is needed to complete the request, typically involving redirection to a different URL.
usage: 301 Moved Permanently: Requested object has been permanently moved;
the new URL is specified in Location: header of the response message. The
client software will automatically retrieve the new URL.
4.	4xx(client error)
These codes indicate that there was an error with the client's request.
usage: 400 Bad Request: This is a generic error code indicating that the request
could not be understood by the server.
5.	5xx(server error)
These codes indicate that the server failed to fulfill a valid request due to an error on the server side.
usage: 505 HTTP Version Not Supported: The requested HTTP protocol version
is not supported by the server.

HTTP Request message 의 예시

GET /somedir/page.html HTTP/1.1 --->request line 
Host: www.someschool.edu ---> request header
Connection: close
User-agent: Mozilla/5.0
Accept-language: fr

---> request body

request line 는 method field/URL field/HTTP version field 로 구성됨
method field는 GET, POST, HEAD , PUT , DELETE 등 여러가지 값을 가질 수 있음.
가장 빈도수가 높은 값은 GET 
GET 메소드는 브라우저에 한 객체를 요구할 때 사용. 그 때 URL field 를 이용하여 객체를
식별.

request header
Host : www.someschool.edu 는 객체가 있는 호스트를 지정.
connection: close 는 서버와 지속적으로 연결되있는지를 나타냄.
user-agent: Mozilla/5.0 요청한 클라이언트의 브라우저 타입을 나타냄.
Accept-language:fr 클라이언트가 원하는 언어 타입을 나타냄.


HTTP Response Message 의 예시

HTTP/1.1 200 OK --->status line
Connection: close ---> header lines
Date: Tue, 18 Aug 2015 15:44:04 GMT
Server: Apache/2.2.3 (CentOS)
Last-Modified: Tue, 18 Aug 2015 15:11:03 GMT 
Contest-length: 6821
Content-Type: text/html

(data data data data ...)---> entity body	


status line 은 protocol version field/a status code/corresponding status code 
로 구성됨

header lines 
connection: close 메세지를 보낸 후 TCP 연결을 끊었는지의 여부를 나타냄.
Date: Tue ,18 Aug 2015... 응답이 생성되고 서버에서 전송된 시간을 나타냄. 주의할 점은 서버에서 처음 생성되거나 수정된 시간이 아님
server: Apache/2.2.3 (CentOS) 해당 응답을 처리한 웹 서버 소프트웨어가 apache 2.2.3 버전이며, centOS 운영 체제에서 실행되고 있다는 정보를 나타냄
